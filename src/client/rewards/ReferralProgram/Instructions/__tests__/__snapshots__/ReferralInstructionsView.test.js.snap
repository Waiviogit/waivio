// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReferralInstructionsView should create snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BrowserRouter>
    <IntlProvider
      locale="en"
    >
      <ReferralsInstructionsView
        handleCopyTextButton={[MockFunction]}
        mainProps={
          Object {
            "authUserName": "vallon",
            "currentCopyText": "",
            "currentStatus": false,
            "handleAgreeRulesCheckbox": [MockFunction],
            "handleCancelButton": [MockFunction],
            "handleOkButton": [MockFunction],
            "isAuthenticated": true,
            "isBlackListUser": false,
            "isGuest": false,
            "isModal": false,
            "isStartChangeRules": false,
            "isStartGetReferralInfo": false,
            "rejectRules": [MockFunction],
            "setIsCopyButton": [MockFunction],
          }
        }
        widget="<iframe></iframe>"
      />
    </IntlProvider>
  </BrowserRouter>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <IntlProvider
        locale="en"
      >
        <ReferralsInstructionsView
          handleCopyTextButton={[MockFunction]}
          mainProps={
            Object {
              "authUserName": "vallon",
              "currentCopyText": "",
              "currentStatus": false,
              "handleAgreeRulesCheckbox": [MockFunction],
              "handleCancelButton": [MockFunction],
              "handleOkButton": [MockFunction],
              "isAuthenticated": true,
              "isBlackListUser": false,
              "isGuest": false,
              "isModal": false,
              "isStartChangeRules": false,
              "isStartGetReferralInfo": false,
              "rejectRules": [MockFunction],
              "setIsCopyButton": [MockFunction],
            }
          }
          widget="<iframe></iframe>"
        />
      </IntlProvider>,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ReferralsInstructionsView
          handleCopyTextButton={[MockFunction]}
          mainProps={
            Object {
              "authUserName": "vallon",
              "currentCopyText": "",
              "currentStatus": false,
              "handleAgreeRulesCheckbox": [MockFunction],
              "handleCancelButton": [MockFunction],
              "handleOkButton": [MockFunction],
              "isAuthenticated": true,
              "isBlackListUser": false,
              "isGuest": false,
              "isModal": false,
              "isStartChangeRules": false,
              "isStartGetReferralInfo": false,
              "rejectRules": [MockFunction],
              "setIsCopyButton": [MockFunction],
            }
          }
          widget="<iframe></iframe>"
        />,
        "locale": "en",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleCopyTextButton": [MockFunction],
          "mainProps": Object {
            "authUserName": "vallon",
            "currentCopyText": "",
            "currentStatus": false,
            "handleAgreeRulesCheckbox": [MockFunction],
            "handleCancelButton": [MockFunction],
            "handleOkButton": [MockFunction],
            "isAuthenticated": true,
            "isBlackListUser": false,
            "isGuest": false,
            "isModal": false,
            "isStartChangeRules": false,
            "isStartGetReferralInfo": false,
            "rejectRules": [MockFunction],
            "setIsCopyButton": [MockFunction],
          },
          "widget": "<iframe></iframe>",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <IntlProvider
          locale="en"
        >
          <ReferralsInstructionsView
            handleCopyTextButton={[MockFunction]}
            mainProps={
              Object {
                "authUserName": "vallon",
                "currentCopyText": "",
                "currentStatus": false,
                "handleAgreeRulesCheckbox": [MockFunction],
                "handleCancelButton": [MockFunction],
                "handleOkButton": [MockFunction],
                "isAuthenticated": true,
                "isBlackListUser": false,
                "isGuest": false,
                "isModal": false,
                "isStartChangeRules": false,
                "isStartGetReferralInfo": false,
                "rejectRules": [MockFunction],
                "setIsCopyButton": [MockFunction],
              }
            }
            widget="<iframe></iframe>"
          />
        </IntlProvider>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ReferralsInstructionsView
            handleCopyTextButton={[MockFunction]}
            mainProps={
              Object {
                "authUserName": "vallon",
                "currentCopyText": "",
                "currentStatus": false,
                "handleAgreeRulesCheckbox": [MockFunction],
                "handleCancelButton": [MockFunction],
                "handleOkButton": [MockFunction],
                "isAuthenticated": true,
                "isBlackListUser": false,
                "isGuest": false,
                "isModal": false,
                "isStartChangeRules": false,
                "isStartGetReferralInfo": false,
                "rejectRules": [MockFunction],
                "setIsCopyButton": [MockFunction],
              }
            }
            widget="<iframe></iframe>"
          />,
          "locale": "en",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleCopyTextButton": [MockFunction],
            "mainProps": Object {
              "authUserName": "vallon",
              "currentCopyText": "",
              "currentStatus": false,
              "handleAgreeRulesCheckbox": [MockFunction],
              "handleCancelButton": [MockFunction],
              "handleOkButton": [MockFunction],
              "isAuthenticated": true,
              "isBlackListUser": false,
              "isGuest": false,
              "isModal": false,
              "isStartChangeRules": false,
              "isStartGetReferralInfo": false,
              "rejectRules": [MockFunction],
              "setIsCopyButton": [MockFunction],
            },
            "widget": "<iframe></iframe>",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
