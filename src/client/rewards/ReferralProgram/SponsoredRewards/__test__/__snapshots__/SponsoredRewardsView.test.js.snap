// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SponsoredRewardsView should create SponsoredRewardsView's snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <IntlProvider
    locale="en"
  >
    <SponsoredRewardsView
      intl={
        Object {
          "formatMessage": [MockFunction],
        }
      }
      sponsoredRewardsTitle={
        <FormattedMessage
          defaultMessage="Sponsored rewards: {username}"
          id="sponsored_rewards_title"
          values={
            Object {
              "username": <UNDEFINED
                to="/@vallon"
              >
                <span
                  className="title-link"
                >
                  vallon
                </span>
              </UNDEFINED>,
            }
          }
        />
      }
      statusSponsoredHistory={
        Array [
          Object {
            "_id": "5f854d0f5110180f72a5e386",
          },
        ]
      }
    />
  </IntlProvider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "intl": Object {
        "formatMessage": [MockFunction],
      },
      "sponsoredRewardsTitle": <FormattedMessage
        defaultMessage="Sponsored rewards: {username}"
        id="sponsored_rewards_title"
        values={
          Object {
            "username": <UNDEFINED
              to="/@vallon"
            >
              <span
                className="title-link"
              >
                vallon
              </span>
            </UNDEFINED>,
          }
        }
      />,
      "statusSponsoredHistory": Array [
        Object {
          "_id": "5f854d0f5110180f72a5e386",
        },
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "intl": Object {
          "formatMessage": [MockFunction],
        },
        "sponsoredRewardsTitle": <FormattedMessage
          defaultMessage="Sponsored rewards: {username}"
          id="sponsored_rewards_title"
          values={
            Object {
              "username": <UNDEFINED
                to="/@vallon"
              >
                <span
                  className="title-link"
                >
                  vallon
                </span>
              </UNDEFINED>,
            }
          }
        />,
        "statusSponsoredHistory": Array [
          Object {
            "_id": "5f854d0f5110180f72a5e386",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): Object {
    "intl": Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    },
  },
}
`;
