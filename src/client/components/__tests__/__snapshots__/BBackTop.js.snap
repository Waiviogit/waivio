// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BBackTop /> renders without exploding 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BBackTop
    className="comments"
    isModal={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="comments BBackTop__container"
      >
        <BackTop
          className="BBackTop_button"
          visibilityHeight={400}
        >
          <i
            className="iconfont icon-back-top"
          />
        </BackTop>
      </div>,
      "className": "BBackTop",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <BackTop
          className="BBackTop_button"
          visibilityHeight={400}
        >
          <i
            className="iconfont icon-back-top"
          />
        </BackTop>,
        "className": "comments BBackTop__container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <i
            className="iconfont icon-back-top"
          />,
          "className": "BBackTop_button",
          "visibilityHeight": 400,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "iconfont icon-back-top",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": [Function],
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="comments BBackTop__container"
        >
          <BackTop
            className="BBackTop_button"
            visibilityHeight={400}
          >
            <i
              className="iconfont icon-back-top"
            />
          </BackTop>
        </div>,
        "className": "BBackTop",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <BackTop
            className="BBackTop_button"
            visibilityHeight={400}
          >
            <i
              className="iconfont icon-back-top"
            />
          </BackTop>,
          "className": "comments BBackTop__container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <i
              className="iconfont icon-back-top"
            />,
            "className": "BBackTop_button",
            "visibilityHeight": 400,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "iconfont icon-back-top",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": [Function],
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
